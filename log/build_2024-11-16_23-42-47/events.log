[0.000000] (-) TimerEvent: {}
[0.000459] (-) JobUnselected: {'identifier': 'ackermann_steering_controller'}
[0.000485] (-) JobUnselected: {'identifier': 'add_two_ints'}
[0.000502] (-) JobUnselected: {'identifier': 'add_two_ints_cpp'}
[0.000560] (-) JobUnselected: {'identifier': 'admittance_controller'}
[0.000576] (-) JobUnselected: {'identifier': 'bicycle_steering_controller'}
[0.000586] (-) JobUnselected: {'identifier': 'controller_interface'}
[0.000599] (-) JobUnselected: {'identifier': 'controller_manager'}
[0.000609] (-) JobUnselected: {'identifier': 'controller_manager_msgs'}
[0.000622] (-) JobUnselected: {'identifier': 'diff_drive_controller'}
[0.000632] (-) JobUnselected: {'identifier': 'effort_controllers'}
[0.000644] (-) JobUnselected: {'identifier': 'force_torque_sensor_broadcaster'}
[0.000654] (-) JobUnselected: {'identifier': 'forward_command_controller'}
[0.000667] (-) JobUnselected: {'identifier': 'gripper_controllers'}
[0.000676] (-) JobUnselected: {'identifier': 'gz_ros2_control_tests'}
[0.000688] (-) JobUnselected: {'identifier': 'hardware_interface'}
[0.000697] (-) JobUnselected: {'identifier': 'hardware_interface_testing'}
[0.000710] (-) JobUnselected: {'identifier': 'ign_ros2_control'}
[0.000719] (-) JobUnselected: {'identifier': 'ign_ros2_control_demos'}
[0.000731] (-) JobUnselected: {'identifier': 'imu_sensor_broadcaster'}
[0.000741] (-) JobUnselected: {'identifier': 'joint_limits'}
[0.000754] (-) JobUnselected: {'identifier': 'joint_state_broadcaster'}
[0.000763] (-) JobUnselected: {'identifier': 'joint_trajectory_controller'}
[0.000775] (-) JobUnselected: {'identifier': 'my_py_pkg'}
[0.000784] (-) JobUnselected: {'identifier': 'my_robot_interfaces'}
[0.000797] (-) JobUnselected: {'identifier': 'number_counter'}
[0.000806] (-) JobUnselected: {'identifier': 'polygon_base'}
[0.000818] (-) JobUnselected: {'identifier': 'polygon_plugins'}
[0.000827] (-) JobUnselected: {'identifier': 'position_controllers'}
[0.000840] (-) JobUnselected: {'identifier': 'range_sensor_broadcaster'}
[0.000848] (-) JobUnselected: {'identifier': 'ros2_control'}
[0.000860] (-) JobUnselected: {'identifier': 'ros2_control_test_assets'}
[0.000870] (-) JobUnselected: {'identifier': 'ros2_controllers'}
[0.000882] (-) JobUnselected: {'identifier': 'ros2_controllers_test_nodes'}
[0.000891] (-) JobUnselected: {'identifier': 'ros2controlcli'}
[0.000903] (-) JobUnselected: {'identifier': 'rqt_controller_manager'}
[0.000913] (-) JobUnselected: {'identifier': 'rqt_joint_trajectory_controller'}
[0.000926] (-) JobUnselected: {'identifier': 'steering_controllers_library'}
[0.000934] (-) JobUnselected: {'identifier': 'transmission_interface'}
[0.000946] (-) JobUnselected: {'identifier': 'tricycle_controller'}
[0.000956] (-) JobUnselected: {'identifier': 'tricycle_steering_controller'}
[0.000968] (-) JobUnselected: {'identifier': 'velocity_controllers'}
[0.000979] (my_cpp_pkg) JobQueued: {'identifier': 'my_cpp_pkg', 'dependencies': OrderedDict([('my_robot_interfaces', '/home/parallels/ros2_ws/install/my_robot_interfaces')])}
[0.000996] (my_cpp_pkg) JobStarted: {'identifier': 'my_cpp_pkg'}
[0.007661] (my_cpp_pkg) JobProgress: {'identifier': 'my_cpp_pkg', 'progress': 'cmake'}
[0.007996] (my_cpp_pkg) JobProgress: {'identifier': 'my_cpp_pkg', 'progress': 'build'}
[0.008386] (my_cpp_pkg) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/parallels/ros2_ws/build/my_cpp_pkg', '--', '-j4', '-l4'], 'cwd': '/home/parallels/ros2_ws/build/my_cpp_pkg', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'parallels'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/parallels/ros2_ws/install/my_robot_interfaces/lib:/home/parallels/ros2_ws/install/velocity_controllers/lib:/home/parallels/ros2_ws/install/tricycle_steering_controller/lib:/home/parallels/ros2_ws/install/tricycle_controller/lib:/home/parallels/ros2_ws/install/transmission_interface/lib:/home/parallels/ros2_ws/install/bicycle_steering_controller/lib:/home/parallels/ros2_ws/install/ackermann_steering_controller/lib:/home/parallels/ros2_ws/install/steering_controllers_library/lib:/home/parallels/ros2_ws/install/ign_ros2_control/lib:/home/parallels/ros2_ws/install/hardware_interface_testing/lib:/home/parallels/ros2_ws/install/controller_manager/lib:/home/parallels/ros2_ws/install/range_sensor_broadcaster/lib:/home/parallels/ros2_ws/install/position_controllers/lib:/home/parallels/ros2_ws/install/polygon_plugins/lib:/home/parallels/ros2_ws/install/admittance_controller/lib:/home/parallels/ros2_ws/install/joint_trajectory_controller/lib:/home/parallels/ros2_ws/install/joint_state_broadcaster/lib:/home/parallels/ros2_ws/install/imu_sensor_broadcaster/lib:/home/parallels/ros2_ws/install/gripper_controllers/lib:/home/parallels/ros2_ws/install/effort_controllers/lib:/home/parallels/ros2_ws/install/forward_command_controller/lib:/home/parallels/ros2_ws/install/force_torque_sensor_broadcaster/lib:/home/parallels/ros2_ws/install/diff_drive_controller/lib:/home/parallels/ros2_ws/install/controller_interface/lib:/home/parallels/ros2_ws/install/hardware_interface/lib:/home/parallels/ros2_ws/install/controller_manager_msgs/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/aarch64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/parallels'), ('OLDPWD', '/home/parallels/ros2_ws/src'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/terminator.desktop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '2455'), ('SYSTEMD_EXEC_PID', '2572'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator25ef4b219e3b005583550f2b0f9f990c3'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '38629'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/parallels/ros2_ws/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'parallels'), ('JOURNAL_STREAM', '8:29109'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'parallels'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/ubuntu-linux-22-04-02-desktop:@/tmp/.ICE-unix/2535,unix/ubuntu-linux-22-04-02-desktop:/tmp/.ICE-unix/2535'), ('INVOCATION_ID', 'd8284445e5014c218acd583c14be91d1'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('IBUS_DISABLE_SNOOPER', '1'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.D2P9W2'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/parallels/ros2_ws/install/ros2_controllers:/home/parallels/ros2_ws/install/ign_ros2_control_demos:/home/parallels/ros2_ws/install/velocity_controllers:/home/parallels/ros2_ws/install/tricycle_steering_controller:/home/parallels/ros2_ws/install/tricycle_controller:/home/parallels/ros2_ws/install/ros2_control:/home/parallels/ros2_ws/install/transmission_interface:/home/parallels/ros2_ws/install/bicycle_steering_controller:/home/parallels/ros2_ws/install/ackermann_steering_controller:/home/parallels/ros2_ws/install/steering_controllers_library:/home/parallels/ros2_ws/install/rqt_joint_trajectory_controller:/home/parallels/ros2_ws/install/rqt_controller_manager:/home/parallels/ros2_ws/install/gz_ros2_control_tests:/home/parallels/ros2_ws/install/ros2controlcli:/home/parallels/ros2_ws/install/ros2_controllers_test_nodes:/home/parallels/ros2_ws/install/ign_ros2_control:/home/parallels/ros2_ws/install/hardware_interface_testing:/home/parallels/ros2_ws/install/controller_manager:/home/parallels/ros2_ws/install/ros2_control_test_assets:/home/parallels/ros2_ws/install/range_sensor_broadcaster:/home/parallels/ros2_ws/install/position_controllers:/home/parallels/ros2_ws/install/polygon_plugins:/home/parallels/ros2_ws/install/polygon_base:/home/parallels/ros2_ws/install/number_counter:/home/parallels/ros2_ws/install/my_py_pkg:/home/parallels/ros2_ws/install/my_cpp_pkg:/home/parallels/ros2_ws/install/my_robot_interfaces:/home/parallels/ros2_ws/install/admittance_controller:/home/parallels/ros2_ws/install/joint_trajectory_controller:/home/parallels/ros2_ws/install/joint_state_broadcaster:/home/parallels/ros2_ws/install/joint_limits:/home/parallels/ros2_ws/install/imu_sensor_broadcaster:/home/parallels/ros2_ws/install/gripper_controllers:/home/parallels/ros2_ws/install/effort_controllers:/home/parallels/ros2_ws/install/forward_command_controller:/home/parallels/ros2_ws/install/force_torque_sensor_broadcaster:/home/parallels/ros2_ws/install/diff_drive_controller:/home/parallels/ros2_ws/install/controller_interface:/home/parallels/ros2_ws/install/hardware_interface:/home/parallels/ros2_ws/install/controller_manager_msgs:/home/parallels/ros2_ws/install/add_two_ints_cpp:/home/parallels/ros2_ws/install/add_two_ints:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:b3c60140-f135-43f1-8669-ee7c28608862'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/parallels/ros2_ws/build/my_cpp_pkg'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/parallels/ros2_ws/install/rqt_joint_trajectory_controller/lib/python3.10/site-packages:/home/parallels/ros2_ws/install/rqt_controller_manager/lib/python3.10/site-packages:/home/parallels/ros2_ws/install/ros2controlcli/lib/python3.10/site-packages:/home/parallels/ros2_ws/install/ros2_controllers_test_nodes/lib/python3.10/site-packages:/home/parallels/ros2_ws/install/controller_manager/local/lib/python3.10/dist-packages:/home/parallels/ros2_ws/install/number_counter/lib/python3.10/site-packages:/home/parallels/ros2_ws/build/my_py_pkg:/home/parallels/ros2_ws/install/my_py_pkg/lib/python3.10/site-packages:/home/parallels/ros2_ws/install/my_robot_interfaces/local/lib/python3.10/dist-packages:/home/parallels/ros2_ws/install/controller_manager_msgs/local/lib/python3.10/dist-packages:/home/parallels/ros2_ws/build/add_two_ints:/home/parallels/ros2_ws/install/add_two_ints/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/parallels/ros2_ws/install/my_robot_interfaces:/home/parallels/ros2_ws/install/ros2_controllers:/home/parallels/ros2_ws/install/ign_ros2_control_demos:/home/parallels/ros2_ws/install/velocity_controllers:/home/parallels/ros2_ws/install/tricycle_steering_controller:/home/parallels/ros2_ws/install/tricycle_controller:/home/parallels/ros2_ws/install/ros2_control:/home/parallels/ros2_ws/install/transmission_interface:/home/parallels/ros2_ws/install/bicycle_steering_controller:/home/parallels/ros2_ws/install/ackermann_steering_controller:/home/parallels/ros2_ws/install/steering_controllers_library:/home/parallels/ros2_ws/install/gz_ros2_control_tests:/home/parallels/ros2_ws/install/ign_ros2_control:/home/parallels/ros2_ws/install/hardware_interface_testing:/home/parallels/ros2_ws/install/controller_manager:/home/parallels/ros2_ws/install/ros2_control_test_assets:/home/parallels/ros2_ws/install/range_sensor_broadcaster:/home/parallels/ros2_ws/install/position_controllers:/home/parallels/ros2_ws/install/polygon_plugins:/home/parallels/ros2_ws/install/polygon_base:/home/parallels/ros2_ws/install/my_cpp_pkg:/home/parallels/ros2_ws/install/admittance_controller:/home/parallels/ros2_ws/install/joint_trajectory_controller:/home/parallels/ros2_ws/install/joint_state_broadcaster:/home/parallels/ros2_ws/install/joint_limits:/home/parallels/ros2_ws/install/imu_sensor_broadcaster:/home/parallels/ros2_ws/install/gripper_controllers:/home/parallels/ros2_ws/install/effort_controllers:/home/parallels/ros2_ws/install/forward_command_controller:/home/parallels/ros2_ws/install/force_torque_sensor_broadcaster:/home/parallels/ros2_ws/install/diff_drive_controller:/home/parallels/ros2_ws/install/controller_interface:/home/parallels/ros2_ws/install/hardware_interface:/home/parallels/ros2_ws/install/controller_manager_msgs:/home/parallels/ros2_ws/install/add_two_ints_cpp:/usr:/home/parallels/ros2_ws/install/rqt_joint_trajectory_controller:/home/parallels/ros2_ws/install/rqt_controller_manager:/home/parallels/ros2_ws/install/ros2controlcli:/home/parallels/ros2_ws/install/ros2_controllers_test_nodes:/home/parallels/ros2_ws/install/number_counter:/home/parallels/ros2_ws/install/my_py_pkg:/home/parallels/ros2_ws/install/add_two_ints:/opt/ros/humble')]), 'shell': False}
[0.045561] (my_cpp_pkg) StdoutLine: {'line': b'[ 20%] Built target smartphone\n'}
[0.067026] (my_cpp_pkg) StdoutLine: {'line': b'[ 40%] Built target hardwarestatus_pub\n'}
[0.067143] (my_cpp_pkg) StdoutLine: {'line': b'[ 60%] Built target cpp_node\n'}
[0.067946] (my_cpp_pkg) StdoutLine: {'line': b'[ 80%] Built target robot_radio_station\n'}
[0.074389] (my_cpp_pkg) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target hardwarestatus_sub\x1b[0m\n'}
[0.085305] (my_cpp_pkg) StdoutLine: {'line': b'[ 90%] \x1b[32mBuilding CXX object CMakeFiles/hardwarestatus_sub.dir/src/hardwarestatus_sub.cpp.o\x1b[0m\n'}
[0.100569] (-) TimerEvent: {}
[0.201072] (-) TimerEvent: {}
[0.301353] (-) TimerEvent: {}
[0.403069] (-) TimerEvent: {}
[0.504232] (-) TimerEvent: {}
[0.605916] (-) TimerEvent: {}
[0.706453] (-) TimerEvent: {}
[0.806681] (-) TimerEvent: {}
[0.907340] (-) TimerEvent: {}
[1.007946] (-) TimerEvent: {}
[1.108590] (-) TimerEvent: {}
[1.116393] (my_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13\x1b[m\x1b[K,\n'}
[1.116529] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/algorithm:74\x1b[m\x1b[K,\n'}
[1.116562] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:18\x1b[m\x1b[K,\n'}
[1.116589] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.116614] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.116642] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.116665] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/parallels/ros2_ws/src/my_cpp_pkg/src/hardwarestatus_sub.cpp:1\x1b[m\x1b[K:\n'}
[1.116689] (my_cpp_pkg) StderrLine: {'line': b'/usr/include/c++/11/functional: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct std::_Bind_check_arity<void (hardwarestatus_sub::*)(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >), hardwarestatus_sub*>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.116716] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:768:12:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::_Bind_helper<false, void (hardwarestatus_sub::*)(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >), hardwarestatus_sub*>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.116742] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:789:5:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = void (hardwarestatus_sub::*)(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >); _BoundArgs = {hardwarestatus_sub*}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.116768] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/parallels/ros2_ws/src/my_cpp_pkg/src/hardwarestatus_sub.cpp:11:87:\x1b[m\x1b[K   required from here\n'}
[1.116792] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:756:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kstatic assertion failed: Wrong number of arguments for pointer-to-member\n'}
[1.116816] (my_cpp_pkg) StderrLine: {'line': b'  755 |       static_assert(_Varargs::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K\n'}
[1.116839] (my_cpp_pkg) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K~~~~~\x1b[m\x1b[K\n'}
[1.116862] (my_cpp_pkg) StderrLine: {'line': b'  756 | \x1b[01;31m\x1b[K                    ? sizeof...(_BoundArgs) >= _Arity::value + 1\x1b[m\x1b[K\n'}
[1.116886] (my_cpp_pkg) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.116909] (my_cpp_pkg) StderrLine: {'line': b'  757 | \x1b[01;31m\x1b[K                    : sizeof...(_BoundArgs) == _Arity::value + 1\x1b[m\x1b[K,\n'}
[1.116932] (my_cpp_pkg) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.116955] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:756:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[K(false ? (1 >= (((long unsigned int)std::integral_constant<long unsigned int, 1>::value) + 1)) : (1 == (((long unsigned int)std::integral_constant<long unsigned int, 1>::value) + 1)))\x1b[m\x1b[K\xe2\x80\x99 evaluates to false\n'}
[1.121064] (my_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/logging.hpp:24\x1b[m\x1b[K,\n'}
[1.121128] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:40\x1b[m\x1b[K,\n'}
[1.121152] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[1.121176] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.121199] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.121222] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.121249] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.121272] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.121295] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.121318] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.121342] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.121365] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/parallels/ros2_ws/src/my_cpp_pkg/src/hardwarestatus_sub.cpp:1\x1b[m\x1b[K:\n'}
[1.121388] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/parallels/ros2_ws/src/my_cpp_pkg/src/hardwarestatus_sub.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid hardwarestatus_sub::sub_hardwarestatus(HardwareStatus)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.121416] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/parallels/ros2_ws/src/my_cpp_pkg/src/hardwarestatus_sub.cpp:20:80:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kc_str\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kstd\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[Kwcsstr\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.121443] (my_cpp_pkg) StderrLine: {'line': b'   20 |         RCLCPP_INFO(this->get_logger(),"Temperature: %ld and Message: " + std::\x1b[01;31m\x1b[Kc_str\x1b[m\x1b[K(dbg_msg),temp);\n'}
[1.121467] (my_cpp_pkg) StderrLine: {'line': b'      |                                                                                \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.208677] (-) TimerEvent: {}
[1.288973] (my_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[1.289331] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[1.289369] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.289394] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.289418] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.289442] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.289465] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.289490] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.289514] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.289537] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.289561] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/parallels/ros2_ws/src/my_cpp_pkg/src/hardwarestatus_sub.cpp:1\x1b[m\x1b[K:\n'}
[1.289584] (my_cpp_pkg) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>; MessageT = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.289618] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.289647] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.289681] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.289709] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.289735] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/parallels/ros2_ws/src/my_cpp_pkg/src/hardwarestatus_sub.cpp:11:56:\x1b[m\x1b[K   required from here\n'}
[1.289758] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>::function(std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.289783] (my_cpp_pkg) StderrLine: {'line': b'  394 |       callback_variant_ = \x1b[01;31m\x1b[Kstatic_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[1.289806] (my_cpp_pkg) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.289830] (my_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/future:47\x1b[m\x1b[K,\n'}
[1.289853] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18\x1b[m\x1b[K,\n'}
[1.289876] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.289898] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/parallels/ros2_ws/src/my_cpp_pkg/src/hardwarestatus_sub.cpp:1\x1b[m\x1b[K:\n'}
[1.289921] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.289948] (my_cpp_pkg) StderrLine: {'line': b'  435 |         \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(_Functor&& __f)\n'}
[1.289970] (my_cpp_pkg) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.289993] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.290019] (my_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[1.290093] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[1.290115] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:64\x1b[m\x1b[K,\n'}
[1.290138] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/memory:63\x1b[m\x1b[K,\n'}
[1.290160] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[1.290182] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/parallels/ros2_ws/src/my_cpp_pkg/src/hardwarestatus_sub.cpp:1\x1b[m\x1b[K:\n'}
[1.290204] (my_cpp_pkg) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using __enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.290229] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:353:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Res, class ... _ArgTypes> template<class _Cond, class _Tp> using _Requires = std::__enable_if_t<_Cond::value, _Tp> [with _Cond = std::function<void(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>::_Callable<std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>&, std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>, std::__invoke_result<std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>&, my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> > > >; _Tp = void; _Res = void; _ArgTypes = {my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.290257] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:434:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>; MessageT = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.290282] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.290311] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.290341] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.290370] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.290396] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/parallels/ros2_ws/src/my_cpp_pkg/src/hardwarestatus_sub.cpp:11:56:\x1b[m\x1b[K   required from here\n'}
[1.290419] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2205:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.290448] (my_cpp_pkg) StderrLine: {'line': b' 2205 |     using \x1b[01;31m\x1b[K__enable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[1.290471] (my_cpp_pkg) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.290494] (my_cpp_pkg) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/future:47\x1b[m\x1b[K,\n'}
[1.290517] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18\x1b[m\x1b[K,\n'}
[1.290540] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.290563] (my_cpp_pkg) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/parallels/ros2_ws/src/my_cpp_pkg/src/hardwarestatus_sub.cpp:1\x1b[m\x1b[K:\n'}
[1.290585] (my_cpp_pkg) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>; MessageT = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.290613] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.290638] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.290667] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.290696] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.290725] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/home/parallels/ros2_ws/src/my_cpp_pkg/src/hardwarestatus_sub.cpp:11:56:\x1b[m\x1b[K   required from here\n'}
[1.290747] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.290771] (my_cpp_pkg) StderrLine: {'line': b'  404 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(function&& __x) noexcept\n'}
[1.290794] (my_cpp_pkg) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.290817] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.290841] (my_cpp_pkg) StderrLine: {'line': b'  404 |       function(\x1b[01;36m\x1b[Kfunction&& __x\x1b[m\x1b[K) noexcept\n'}
[1.290864] (my_cpp_pkg) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[1.290889] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.290912] (my_cpp_pkg) StderrLine: {'line': b'  386 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(const function& __x)\n'}
[1.290934] (my_cpp_pkg) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.290957] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.290981] (my_cpp_pkg) StderrLine: {'line': b'  386 |       function(\x1b[01;36m\x1b[Kconst function& __x\x1b[m\x1b[K)\n'}
[1.291003] (my_cpp_pkg) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[1.291025] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >}; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.291051] (my_cpp_pkg) StderrLine: {'line': b'  375 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(nullptr_t) noexcept\n'}
[1.291074] (my_cpp_pkg) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.291096] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (hardwarestatus_sub::*(hardwarestatus_sub*))(my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.291119] (my_cpp_pkg) StderrLine: {'line': b'  375 |       function(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept\n'}
[1.291141] (my_cpp_pkg) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.291164] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {my_robot_interfaces::msg::HardwareStatus_<std::allocator<void> >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.291189] (my_cpp_pkg) StderrLine: {'line': b'  368 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K() noexcept\n'}
[1.291213] (my_cpp_pkg) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.291235] (my_cpp_pkg) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[1.308757] (-) TimerEvent: {}
[1.410144] (-) TimerEvent: {}
[1.510391] (-) TimerEvent: {}
[1.611513] (-) TimerEvent: {}
[1.712633] (-) TimerEvent: {}
[1.812930] (-) TimerEvent: {}
[1.913476] (-) TimerEvent: {}
[2.015486] (-) TimerEvent: {}
[2.115983] (-) TimerEvent: {}
[2.159628] (my_cpp_pkg) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/hardwarestatus_sub.dir/build.make:76: CMakeFiles/hardwarestatus_sub.dir/src/hardwarestatus_sub.cpp.o] Error 1\n'}
[2.159930] (my_cpp_pkg) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:249: CMakeFiles/hardwarestatus_sub.dir/all] Error 2\n'}
[2.160009] (my_cpp_pkg) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[2.161023] (my_cpp_pkg) CommandEnded: {'returncode': 2}
[2.195290] (my_cpp_pkg) JobEnded: {'identifier': 'my_cpp_pkg', 'rc': 2}
[2.195921] (-) EventReactorShutdown: {}
